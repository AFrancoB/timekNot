// Generated by purs version 0.15.2
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Apply from "../Control.Apply/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Data_Date from "../Data.Date/index.js";
import * as Data_Date_Component from "../Data.Date.Component/index.js";
import * as Data_DateTime from "../Data.DateTime/index.js";
import * as Data_Enum from "../Data.Enum/index.js";
import * as Data_EuclideanRing from "../Data.EuclideanRing/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_List_Lazy from "../Data.List.Lazy/index.js";
import * as Data_List_Lazy_Types from "../Data.List.Lazy.Types/index.js";
import * as Data_List_Types from "../Data.List.Types/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Ord from "../Data.Ord/index.js";
import * as Data_Ratio from "../Data.Ratio/index.js";
import * as Data_Rational from "../Data.Rational/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_Time from "../Data.Time/index.js";
import * as Data_Time_Component from "../Data.Time.Component/index.js";
import * as Parsing from "../Parsing/index.js";
import * as Parsing_Combinators from "../Parsing.Combinators/index.js";
import * as Parsing_Language from "../Parsing.Language/index.js";
import * as Parsing_String from "../Parsing.String/index.js";
import * as Parsing_String_Basic from "../Parsing.String.Basic/index.js";
import * as Parsing_Token from "../Parsing.Token/index.js";
var Full = /* #__PURE__ */ (function () {
    function Full(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Full.create = function (value0) {
        return function (value1) {
            return new Full(value0, value1);
        };
    };
    return Full;
})();
var K = /* #__PURE__ */ (function () {
    function K(value0) {
        this.value0 = value0;
    };
    K.create = function (value0) {
        return new K(value0);
    };
    return K;
})();
var InverseK = /* #__PURE__ */ (function () {
    function InverseK(value0) {
        this.value0 = value0;
    };
    InverseK.create = function (value0) {
        return new InverseK(value0);
    };
    return InverseK;
})();
var Onsets = /* #__PURE__ */ (function () {
    function Onsets(value0) {
        this.value0 = value0;
    };
    Onsets.create = function (value0) {
        return new Onsets(value0);
    };
    return Onsets;
})();
var Pattern = /* #__PURE__ */ (function () {
    function Pattern(value0) {
        this.value0 = value0;
    };
    Pattern.create = function (value0) {
        return new Pattern(value0);
    };
    return Pattern;
})();
var Subdivision = /* #__PURE__ */ (function () {
    function Subdivision(value0) {
        this.value0 = value0;
    };
    Subdivision.create = function (value0) {
        return new Subdivision(value0);
    };
    return Subdivision;
})();
var Euclidean = /* #__PURE__ */ (function () {
    function Euclidean(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Euclidean.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Euclidean(value0, value1, value2, value3);
                };
            };
        };
    };
    return Euclidean;
})();
var Repetition = /* #__PURE__ */ (function () {
    function Repetition(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Repetition.create = function (value0) {
        return function (value1) {
            return new Repetition(value0, value1);
        };
    };
    return Repetition;
})();
var tokenParser = /* #__PURE__ */ Parsing_Token.makeTokenParser(Parsing_Language.haskellStyle);
var whitespace = /* #__PURE__ */ (function () {
    return tokenParser.whiteSpace;
})();
var semi = /* #__PURE__ */ (function () {
    return tokenParser.semi;
})();
var reserved = /* #__PURE__ */ (function () {
    return tokenParser.reserved;
})();
var parens = /* #__PURE__ */ (function () {
    return tokenParser.parens;
})();
var onset = /* #__PURE__ */ Control_Bind.bind(Parsing.bindParserT)(/* #__PURE__ */ Parsing_Combinators.choice(Data_Foldable.foldableArray)([ /* #__PURE__ */ Control_Apply.applySecond(Parsing.applyParserT)(/* #__PURE__ */ Parsing_String_Basic.oneOf([ "x" ]))(/* #__PURE__ */ Control_Applicative.pure(Parsing.applicativeParserT)(true)), /* #__PURE__ */ Control_Apply.applySecond(Parsing.applyParserT)(/* #__PURE__ */ Parsing_String_Basic.oneOf([ "o" ]))(/* #__PURE__ */ Control_Applicative.pure(Parsing.applicativeParserT)(false)) ]))(function (x) {
    return Control_Bind.bind(Parsing.bindParserT)(Control_Applicative.pure(Parsing.applicativeParserT)(1))(function () {
        return Control_Applicative.pure(Parsing.applicativeParserT)(x);
    });
});
var onsets = /* #__PURE__ */ Control_Bind.bind(Parsing.bindParserT)(/* #__PURE__ */ Parsing_Combinators.many(onset))(function (xs) {
    return Control_Bind.bind(Parsing.bindParserT)(Control_Applicative.pure(Parsing.applicativeParserT)(1))(function () {
        return Control_Applicative.pure(Parsing.applicativeParserT)(new Onsets(Data_List_Lazy.fromFoldable(Data_List_Types.foldableList)(xs)));
    });
});
var oDur = /* #__PURE__ */ Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(1)(2);
var o = /* #__PURE__ */ Data_List_Lazy.fromFoldable(Data_Foldable.foldableArray)([ 0.0, 0.2, 0.5 ]);
var naturalOrFloat = /* #__PURE__ */ (function () {
    return tokenParser.naturalOrFloat;
})();
var makeTime = function (h) {
    return function (min) {
        return function (sec) {
            return function (milisec) {
                return Data_Maybe.fromJust()(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Time.Time.create)(Data_Enum.toEnum(Data_Time_Component.boundedEnumHour)(h)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMinute)(min)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumSecond)(sec)))(Data_Enum.toEnum(Data_Time_Component.boundedEnumMillisecond)(milisec)));
            };
        };
    };
};
var makeDate = function (y) {
    return function (m) {
        return function (d) {
            return Data_Maybe.fromJust()(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.flap(Data_Maybe.functorMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Date.canonicalDate)(Data_Enum.toEnum(Data_Date_Component.boundedEnumYear)(y)))(m))(Data_Enum.toEnum(Data_Date_Component.boundedEnumDay)(d)));
        };
    };
};
var t = /* #__PURE__ */ (function () {
    return {
        freq: Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(2)(1),
        time: new Data_DateTime.DateTime(makeDate(2022)(Data_Date_Component.June.value)(3), makeTime(19)(11)(25)(100)),
        count: Data_Rational.fromInt(0)
    };
})();
var we = function (x) {
    return function (y) {
        return new Data_DateTime.DateTime(makeDate(2022)(Data_Date_Component.June.value)(3), makeTime(19)(15)(x)(y));
    };
};
var ws = function (x) {
    return function (y) {
        return new Data_DateTime.DateTime(makeDate(2022)(Data_Date_Component.June.value)(3), makeTime(19)(15)(x)(y));
    };
};
var integer = /* #__PURE__ */ (function () {
    return tokenParser.integer;
})();
var identifier = /* #__PURE__ */ (function () {
    return tokenParser.identifier;
})();
var $$float = /* #__PURE__ */ (function () {
    return tokenParser["float"];
})();
var $$eval = /* #__PURE__ */ (function () {
    return new Data_DateTime.DateTime(makeDate(2022)(Data_Date_Component.June.value)(3), makeTime(19)(13)(5)(150));
})();
var rhythmicShowInstance = {
    show: function (v) {
        if (v instanceof Onsets) {
            return "onsets " + Data_Show.show(Data_List_Lazy_Types.showList(Data_Show.showBoolean))(v.value0);
        };
        if (v instanceof Pattern) {
            return "pattern " + Data_Show.show(Data_List_Lazy_Types.showList(rhythmicShowInstance))(v.value0);
        };
        if (v instanceof Subdivision) {
            return "subdivision: " + Data_Show.show(Data_List_Lazy_Types.showList(rhythmicShowInstance))(v.value0);
        };
        if (v instanceof Euclidean) {
            return Data_Show.show(euclideanShowInstance)(v.value0) + (" euclidean " + (Data_Show.show(Data_Show.showInt)(v.value1) + ("," + (Data_Show.show(Data_Show.showInt)(v.value2) + ("," + Data_Show.show(Data_Show.showInt)(v.value3))))));
        };
        if (v instanceof Repetition) {
            return Data_Show.show(rhythmicShowInstance)(v.value0) + (" times " + Data_Show.show(Data_Show.showInt)(v.value1));
        };
        throw new Error("Failed pattern match at Rhythmic (line 91, column 1 - line 96, column 60): " + [ v.constructor.name ]);
    }
};
var euclideanShowInstance = {
    show: function (v) {
        if (v instanceof Full) {
            return Data_Show.show(rhythmicShowInstance)(v.value0) + ("on ks and not on ks " + Data_Show.show(rhythmicShowInstance)(v.value1));
        };
        if (v instanceof K) {
            return Data_Show.show(rhythmicShowInstance)(v.value0);
        };
        if (v instanceof InverseK) {
            return Data_Show.show(rhythmicShowInstance)(v.value0);
        };
        throw new Error("Failed pattern match at Rhythmic (line 86, column 1 - line 89, column 29): " + [ v.constructor.name ]);
    }
};
var comma = /* #__PURE__ */ (function () {
    return tokenParser.comma;
})();
var colon = /* #__PURE__ */ (function () {
    return tokenParser.colon;
})();
var chainRhythms = function (x) {
    return function (y) {
        return new Pattern(Data_List_Lazy.snoc(Data_List_Lazy.fromFoldable(Data_Foldable.foldableArray)([ x ]))(y));
    };
};
var patterns = /* #__PURE__ */ Control_Bind.bind(Parsing.bindParserT)(/* #__PURE__ */ Parsing_Combinators.chainl1(/* #__PURE__ */ Parsing_Combinators.choice(Data_Foldable.foldableArray)([ /* #__PURE__ */ Parsing_Combinators["try"](onsets) ]))(/* #__PURE__ */ Data_Functor.voidLeft(Parsing.functorParserT)(/* #__PURE__ */ Parsing_String["char"](" "))(chainRhythms)))(function (x) {
    return Control_Bind.bind(Parsing.bindParserT)(Control_Applicative.pure(Parsing.applicativeParserT)(1))(function () {
        return Control_Applicative.pure(Parsing.applicativeParserT)(x);
    });
});
var topRhythmic = /* #__PURE__ */ Control_Bind.bind(Parsing.bindParserT)(/* #__PURE__ */ Parsing_Combinators.choice(Data_Foldable.foldableArray)([ patterns ]))(function (r) {
    return Control_Bind.discard(Control_Bind.discardUnit)(Parsing.bindParserT)(Parsing_String.eof)(function () {
        return Control_Applicative.pure(Parsing.applicativeParserT)(r);
    });
});
var brackets = /* #__PURE__ */ (function () {
    return tokenParser.brackets;
})();
var braces = /* #__PURE__ */ (function () {
    return tokenParser.braces;
})();
export {
    Onsets,
    Pattern,
    Subdivision,
    Euclidean,
    Repetition,
    topRhythmic,
    euclideanShowInstance,
    rhythmicShowInstance
};
